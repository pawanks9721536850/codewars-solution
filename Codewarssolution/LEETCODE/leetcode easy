Q1:Fibonacci Number
The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,

F(0) = 0, F(1) = 1
F(n) = F(n - 1) + F(n - 2), for n > 1.
Given n, calculate F(n).



Example 1:

Input: n = 2
Output: 1
Explanation: F(2) = F(1) + F(0) = 1 + 0 = 1.
Example 2:

Input: n = 3
Output: 2
Explanation: F(3) = F(2) + F(1) = 1 + 1 = 2.

class Solution {
    public int fib(int n) {
        if ( n == 0 || n == 1 )
        {
            return n ;
        }

        return fib(n-1)+fib(n-2) ;
    }
}

Q2:Squares of a Sorted Array
   Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.



   Example 1:

   Input: nums = [-4,-1,0,3,10]
   Output: [0,1,9,16,100]
   Explanation: After squaring, the array becomes [16,1,0,9,100].
   After sorting, it becomes [0,1,9,16,100].
   Example 2:

   Input: nums = [-7,-3,2,3,11]
   Output: [4,9,9,49,121]



   class Solution {
       public int[] sortedSquares(int[] nums) {
           for ( int i = 0 ; i < nums.length ; i++ )
           {
               nums[i] = nums[i]*nums[i] ;

           }
           Arrays.sort(nums);
           return nums ;
       }
   }

  Q3: Move Zeroes
  Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

  Note that you must do this in-place without making a copy of the array.



  Example 1:

  Input: nums = [0,1,0,3,12]
  Output: [1,3,12,0,0]
  Example 2:

  Input: nums = [0]
  Output: [0]

  class Solution {
      public void moveZeroes(int[] nums) {
          //int zeroInd = 0 ;
          int ind = 0 ;

          for ( int i = 0 ; i < nums.length ; i++ )
          {
              if ( nums[i] == 0 )
              {

                  ind = i ;
                  while ( ind < nums.length-1 &&  nums[ind] == 0  )
                  {
                      ind++ ;
                  }
                  int temp = nums[i] ;
                  nums[i] = nums[ind] ;
                  nums[ind] = temp ;

              }
          }
      }
  }






